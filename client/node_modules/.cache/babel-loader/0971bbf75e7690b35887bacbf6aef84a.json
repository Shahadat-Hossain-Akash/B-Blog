{"ast":null,"code":"var _jsxFileName = \"D:\\\\b-blog\\\\client\\\\src\\\\components\\\\singlePost\\\\SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './singlepost.css';\nimport edit from '../../images/Edit.png';\nimport del from '../../images/Delete.png';\nimport { Context } from '../../context/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/image/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  const handleDelete = async e => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(`/posts/${path}`);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setTitle(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singleImage\",\n      children: post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"coverImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singleTitle\",\n        children: updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"singleTitleInput\",\n          type: \"text\",\n          value: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"textTitle\",\n          children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"singleButton\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modify\",\n              onClick: () => setUpdateMode(true),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"modifyImage\",\n                src: edit,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 88\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modify\",\n              onClick: handleDelete,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"modifyImage\",\n                src: del,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 75\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singleInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            className: \"link\",\n            to: `/?user=${post.username}`,\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singleDetailsInput\",\n        value: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singleDetails\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SinglePost, \"e+pfhbmVNAJGgAXvDxuNkjsCBds=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["axios","useContext","useEffect","useState","Link","useLocation","edit","del","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","handleDelete","e","delete","_id","data","username","window","replace","err","getPost","res","get","photo","Date","createdAt","toDateString"],"sources":["D:/b-blog/client/src/components/singlePost/SinglePost.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport './singlepost.css'\r\nimport edit from '../../images/Edit.png'\r\nimport del from '../../images/Delete.png'\r\nimport { Context } from '../../context/Context'\r\n\r\nexport default function SinglePost() {\r\n    const location = useLocation();\r\n    const path = location.pathname.split(\"/\")[2];\r\n    const [post, setPost] = useState({});\r\n    const PF = \"http://localhost:5000/image/\"\r\n    const {user}  = useContext(Context)\r\n    const [title, setTitle] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    const [updateMode, setUpdateMode] = useState(false);\r\n    const handleDelete =async (e) => {\r\n        try {\r\n            \r\n            await axios.delete(`/posts/${post._id}`,{ data:{username:user.username}})\r\n            window.location.replace(\"/\")\r\n        } catch (err) {\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getPost = async () =>{\r\n            const res = await axios.get(`/posts/${path}`)\r\n            setPost(res.data)\r\n            setTitle(res.data.title)\r\n            setTitle(res.data.desc)\r\n        }\r\n        getPost()\r\n    }, [path])\r\n\r\n    return (\r\n        <div className='singlePost'>\r\n            <div className=\"singleImage\">\r\n            {post.photo && (\r\n                <img\r\n                    src= {PF +post.photo}\r\n                    alt=\"\"\r\n                    className=\"coverImage\"/>\r\n                    )}\r\n            </div>\r\n            <div className=\"wrapper\">\r\n                <div className=\"singleTitle\">\r\n                {updateMode ? <input className='singleTitleInput' type=\"text\" value={post.title} />: (\r\n                    <h1 className='textTitle'>{post.title}\r\n                    {post.username === user?.username && (\r\n                    <div className=\"singleButton\">\r\n                        <button className=\"modify\" onClick={() => setUpdateMode(true)}><img\r\n                            className='modifyImage'\r\n                            src={edit}\r\n                            alt=\"\"/></button>\r\n                        <button className=\"modify\" onClick={handleDelete}><img\r\n                            className='modifyImage'\r\n                            src={del}\r\n                            alt=\"\"/></button>\r\n                    </div>\r\n                    )}\r\n                    </h1>\r\n                    )}\r\n                </div>\r\n                <div className=\"singleInfo\">\r\n                    <span className=\"info\">Author:\r\n                    <Link className='link' to={`/?user=${post.username}`}>\r\n                        <b>{post.username}</b>\r\n                        </Link>\r\n                    </span>\r\n                    <span className=\"info\">{new Date(post.createdAt).toDateString()}</span>\r\n                </div>\r\n                {updateMode ? <textarea className='singleDetailsInput' value={post.desc}/> : (\r\n                <p className=\"singleDetails\">\r\n                    {post.desc}\r\n                </p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}